package com.example;

import java.util.concurrent.Semaphore;

class Shared
{
	static int count = 0 ;
}

class MyThread extends Thread
{
	Semaphore sem;
	String threadName;
	
	public MyThread(Semaphore sem, String threadName) 
	{
		super(threadName);
		this.sem = sem;
		this.threadName = threadName;
	}

	@Override
	public void run() {
		if(this.threadName.equals("A")) 
		{
			System.out.println("Starting " + threadName);
			for(int i = 0 ; i < 5 ; i++) 
			{
				Shared.count ++ ;
				System.out.println(threadName + ":" + Shared.count);
			}
			
		}
		
		else 
		{
			System.out.println("Starting " + threadName);
			for(int i = 0 ; i < 5 ; i++) 
			{
				Shared.count ++ ;
				System.out.println(threadName + ":" + Shared.count);
			}
		}
		
	}
	
	

}

public class SemaphoreBasics {
	
	public static void main(String[] args) 
	{
		Semaphore sem = new Semaphore(1);
		
		MyThread t1 = new MyThread(sem , "A");
		MyThread t2 = new MyThread(sem, "B");
		t1.start();
		t2.start();
		
	}

}
